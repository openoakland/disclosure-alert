- @filings.each do |f|
  %table.filing
    %tbody
      %tr
        %td.filing__form-number-container
          %span.filing__form-number= form_number_html(f)
        %td
          %strong= f.filer_name
          %br
          - if f.filer_title
            = format_position_title(f.filer_title)
          %br
          = f.title
          %br
          #{f.filed_at.strftime("%A %B %e, %Y at %I:%M %P")}
          - if f.amended_filing_id
            %br
              Amends:
              %a{ href: "https://netfile.com/Connect2/api/public/image/#{f.amended_filing_id}" } Filing ID##{f.amended_filing_id}

      %tr
        %td
        %td
          - if f.form_name == '460'
            %strong Total Contributions Received:
            = format_money(f.total_contributions_received)
            %br
            %strong Total Expenditures Made:
            = format_money(f.total_expenditures_made)

          - if f.form_name == '497 LCR'
            - total_amount = f.contents.map { |i| i['calculated_Amount'] }.sum
            %strong Total Contributions Received:
            = format_money(f.contents.map { |i| i['calculated_Amount'] }.sum)
            %br
            %strong Largest 3 Contributions Received:
            %ul
              - largest_three = f.contents.sort_by { |i| i['calculated_Amount'] }.reverse.first(3)
              - largest_three_total_amount = largest_three.map { |i| i['calculated_Amount'] }.sum
              - largest_three.each do |contribution|
                %li #{format_money(contribution['calculated_Amount'])} – #{contribution['tran_NamL']}
              - if f.contents.length > 3
                %li and #{format_money(total_amount - largest_three_total_amount)} from #{f.contents.length - 3} other contributors

          - if f.form_name == '497 LCM'
            - total_amount = f.contents.map { |i| i['calculated_Amount'] }.sum
            %strong Total Contributions Made:
            = format_money(total_amount)
            %br
            %strong Largest 3 Contributions Made:
            %ul
              - largest_three = f.contents.sort_by { |i| i['calculated_Amount'] }.reverse.first(3)
              - largest_three_total_amount = largest_three.map { |i| i['calculated_Amount'] }.sum
              - largest_three.each do |contribution|
                %li #{format_money(contribution['calculated_Amount'])} – #{contribution['tran_NamL']}
              - if f.contents.length > 3
                %li and #{format_money(total_amount - largest_three_total_amount)} from #{f.contents.length - 3} other contributors

          - if f.form_name == '700'
            - if f.offices.length > 1
              Other Positions:
              %ul
                - f.offices[1..-1].each do |office|
                  %li= format_position_title(Forms::Form700.title_from_office(office))
            - if f.schedule_a1.any?
              Investments (Schedule A1):
              %ul
                - f.schedule_a1.each do |investment|
                  %li #{investment['name_of_business_entity']} - #{investment['fair_market_value']}
            - if f.schedule_a2.any?
              Trusts/Business Entities (Schedule A2):
              %ul
                - f.schedule_a2.each do |entity|
                  %li #{entity['entity_name']} (#{entity['business_type']}) - Valued #{entity['fair_market_value_schedule_a_2']}
            - if f.schedule_b.any?
              Real Property (Schedule B):
              %ul
                - f.schedule_b.each do |property|
                  %li #{property['parcel_or_address']}, #{property['city']} - #{property['fair_market_value']}
            - if f.schedule_c1.any?
              Income, Loans, and Business Positions (Schedule C):
              %ul
                - f.schedule_c1.each do |income|
                  %li
                    #{income['business_position']}, #{income['business_activity']}, #{income['name_of_income_source']} -
                    #{income['gross_income_received_schedule_c_1']}
            - if f.schedule_d.any?
              Gifts (Schedule D):
              %ul
                - f.schedule_d.each do |gift|
                  - if gift['gifts'].length > 1
                    - gifts_string = "#{pluralize(gift['gifts'].length, 'gift')} totaling #{format_money(gift['gifts'].sum { |g| g['amount'] })}"
                  - else
                    - gifts_string = "#{gift['gifts'][0]['description']} - #{format_money(gift['gifts'][0]['amount'])}"
                  %li #{gift['name_of_source']} - #{gifts_string}

            - if f.schedule_e.any?
              Gifts - Travel Payments (Schedule E):
              %ul
                - f.schedule_e.each do |travel|
                  %li #{travel['name_of_source']} (#{travel['travel_description']}) - #{format_money(travel['amount'].to_f)}


      %tr
        %td
        %td
          %a{ href: "https://netfile.com/Connect2/api/public/image/#{f.id}" } View Original Filing
          - if f.filer_id
            %br
            %a{ href: "https://www.opendisclosure.io/committee/#{f.filer_id}" } View Committee on Open Disclosure

%hr
Don't want to receive these emails any more?
= link_to 'Update Delivery Preferences',
  edit_alert_subscriber_url(@alert_subscriber, token: @alert_subscriber.token)
